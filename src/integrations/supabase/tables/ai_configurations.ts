export type AIConfigurations = {
  Row: {
    id: string;
    name: string;
    description: string | null;
    provider: string;
    provider_name: string | null;
    model_name: string;
    api_base_url: string | null;
    api_key_encrypted: string | null;
    api_version: string | null;
    temperature: number | null;
    max_tokens: number | null;
    top_p: number | null;
    frequency_penalty: number | null;
    presence_penalty: number | null;
    stop_sequences: string[] | null;
    custom_headers: import('../types').Json | null;
    cost_per_1k_prompt_tokens: number | null;
    cost_per_1k_completion_tokens: number | null;
    max_requests_per_minute: number | null;
    max_tokens_per_minute: number | null;
    system_prompt: string | null;
    user_prompt_template: string | null;
    tags: string[] | null;
    metadata: import('../types').Json | null;
    is_active: boolean | null;
    is_default: boolean | null;
    created_at: string | null;
    updated_at: string | null;
    created_by: string | null;
    last_tested_at: string | null;
    test_status: string | null;
  };
  Insert: {
    id?: string;
    name: string;
    description?: string | null;
    provider: string;
    provider_name?: string | null;
    model_name: string;
    api_base_url?: string | null;
    api_key_encrypted?: string | null;
    api_version?: string | null;
    temperature?: number | null;
    max_tokens?: number | null;
    top_p?: number | null;
    frequency_penalty?: number | null;
    presence_penalty?: number | null;
    stop_sequences?: string[] | null;
    custom_headers?: import('../types').Json | null;
    cost_per_1k_prompt_tokens?: number | null;
    cost_per_1k_completion_tokens?: number | null;
    max_requests_per_minute?: number | null;
    max_tokens_per_minute?: number | null;
    system_prompt?: string | null;
    user_prompt_template?: string | null;
    tags?: string[] | null;
    metadata?: import('../types').Json | null;
    is_active?: boolean | null;
    is_default?: boolean | null;
    created_at?: string | null;
    updated_at?: string | null;
    created_by?: string | null;
    last_tested_at?: string | null;
    test_status?: string | null;
  };
  Update: {
    id?: string;
    name?: string;
    description?: string | null;
    provider?: string;
    provider_name?: string | null;
    model_name?: string;
    api_base_url?: string | null;
    api_key_encrypted?: string | null;
    api_version?: string | null;
    temperature?: number | null;
    max_tokens?: number | null;
    top_p?: number | null;
    frequency_penalty?: number | null;
    presence_penalty?: number | null;
    stop_sequences?: string[] | null;
    custom_headers?: import('../types').Json | null;
    cost_per_1k_prompt_tokens?: number | null;
    cost_per_1k_completion_tokens?: number | null;
    max_requests_per_minute?: number | null;
    max_tokens_per_minute?: number | null;
    system_prompt?: string | null;
    user_prompt_template?: string | null;
    tags?: string[] | null;
    metadata?: import('../types').Json | null;
    is_active?: boolean | null;
    is_default?: boolean | null;
    created_at?: string | null;
    updated_at?: string | null;
    created_by?: string | null;
    last_tested_at?: string | null;
    test_status?: string | null;
  };
  Relationships: [];
};